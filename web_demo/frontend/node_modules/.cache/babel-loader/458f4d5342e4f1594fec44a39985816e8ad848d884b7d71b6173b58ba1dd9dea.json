{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, withCtx as _withCtx, createBlock as _createBlock, createCommentVNode as _createCommentVNode, createElementVNode as _createElementVNode, createSlots as _createSlots } from \"vue\";\nconst _hoisted_1 = {\n  key: 0,\n  style: {\n    \"margin-top\": \"8px\",\n    \"color\": \"#666\",\n    \"font-size\": \"14px\"\n  }\n};\nconst _hoisted_2 = {\n  style: {\n    \"padding\": \"40px\"\n  }\n};\nconst _hoisted_3 = {\n  class: \"ant-upload-drag-icon\"\n};\nconst _hoisted_4 = {\n  key: 0,\n  style: {\n    \"margin-top\": \"16px\"\n  }\n};\nconst _hoisted_5 = {\n  style: {\n    \"margin-top\": \"16px\",\n    \"text-align\": \"center\"\n  }\n};\nconst _hoisted_6 = {\n  key: 0,\n  style: {\n    \"text-align\": \"center\",\n    \"padding\": \"60px 20px\",\n    \"color\": \"#999\"\n  }\n};\nconst _hoisted_7 = {\n  key: 0,\n  style: {\n    \"text-align\": \"center\",\n    \"padding\": \"40px\"\n  }\n};\nconst _hoisted_8 = {\n  key: 1\n};\nconst _hoisted_9 = {\n  style: {\n    \"height\": \"200px\",\n    \"overflow\": \"hidden\",\n    \"display\": \"flex\",\n    \"align-items\": \"center\",\n    \"justify-content\": \"center\",\n    \"background\": \"#f5f5f5\"\n  }\n};\nconst _hoisted_10 = [\"src\"];\nconst _hoisted_11 = {\n  key: 0\n};\nconst _hoisted_12 = {\n  style: {\n    \"color\": \"#666\"\n  }\n};\nconst _hoisted_13 = {\n  key: 1\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_a_page_header = _resolveComponent(\"a-page-header\");\n  const _component_a_tag = _resolveComponent(\"a-tag\");\n  const _component_a_space = _resolveComponent(\"a-space\");\n  const _component_a_select_option = _resolveComponent(\"a-select-option\");\n  const _component_a_select = _resolveComponent(\"a-select\");\n  const _component_a_card = _resolveComponent(\"a-card\");\n  const _component_inbox_outlined = _resolveComponent(\"inbox-outlined\");\n  const _component_a_upload_dragger = _resolveComponent(\"a-upload-dragger\");\n  const _component_a_button = _resolveComponent(\"a-button\");\n  const _component_thunderbolt_outlined = _resolveComponent(\"thunderbolt-outlined\");\n  const _component_a_col = _resolveComponent(\"a-col\");\n  const _component_download_outlined = _resolveComponent(\"download-outlined\");\n  const _component_folder_open_outlined = _resolveComponent(\"folder-open-outlined\");\n  const _component_a_progress = _resolveComponent(\"a-progress\");\n  const _component_a_alert = _resolveComponent(\"a-alert\");\n  const _component_a_row = _resolveComponent(\"a-row\");\n  const _component_a_divider = _resolveComponent(\"a-divider\");\n  const _component_a_statistic = _resolveComponent(\"a-statistic\");\n  const _component_a_spin = _resolveComponent(\"a-spin\");\n  return _openBlock(), _createElementBlock(\"div\", null, [_createVNode(_component_a_page_header, {\n    title: \"批量识别\",\n    \"sub-title\": \"上传多张面料图片进行批量智能分类识别\",\n    onBack: _cache[0] || (_cache[0] = $event => _ctx.$router.go(-1))\n  }), _createVNode(_component_a_row, {\n    gutter: 32\n  }, {\n    default: _withCtx(() => [_createVNode(_component_a_col, {\n      xs: 24,\n      lg: 8\n    }, {\n      default: _withCtx(() => [_createVNode(_component_a_card, {\n        title: \"选择模型\",\n        style: {\n          \"margin-bottom\": \"24px\"\n        }\n      }, {\n        default: _withCtx(() => [_createVNode(_component_a_select, {\n          value: $data.selectedModel,\n          \"onUpdate:value\": _cache[1] || (_cache[1] = $event => $data.selectedModel = $event),\n          placeholder: \"请选择识别模型\",\n          style: {\n            \"width\": \"100%\"\n          },\n          onChange: $options.onModelChange\n        }, {\n          default: _withCtx(() => [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.models, model => {\n            return _openBlock(), _createBlock(_component_a_select_option, {\n              key: model.id,\n              value: model.id\n            }, {\n              default: _withCtx(() => [_createVNode(_component_a_space, null, {\n                default: _withCtx(() => [_createVNode(_component_a_tag, {\n                  color: model.type === 'binary' ? 'blue' : 'green',\n                  size: \"small\"\n                }, {\n                  default: _withCtx(() => [_createTextVNode(_toDisplayString(model.type === 'binary' ? '二分类' : '多分类'), 1)]),\n                  _: 2\n                }, 1032, [\"color\"]), _createTextVNode(\" \" + _toDisplayString(model.name), 1)]),\n                _: 2\n              }, 1024)]),\n              _: 2\n            }, 1032, [\"value\"]);\n          }), 128))]),\n          _: 1\n        }, 8, [\"value\", \"onChange\"]), $options.currentModelInfo ? (_openBlock(), _createElementBlock(\"p\", _hoisted_1, _toDisplayString($options.currentModelInfo.description), 1)) : _createCommentVNode(\"\", true)]),\n        _: 1\n      }), _createVNode(_component_a_card, {\n        title: \"上传图片\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_a_upload_dragger, {\n          fileList: $data.fileList,\n          \"onUpdate:fileList\": _cache[2] || (_cache[2] = $event => $data.fileList = $event),\n          \"before-upload\": $options.beforeUpload,\n          multiple: \"\",\n          accept: \"image/*\",\n          onChange: $options.handleUpload\n        }, {\n          default: _withCtx(() => [_createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"p\", _hoisted_3, [_createVNode(_component_inbox_outlined, {\n            style: {\n              \"font-size\": \"48px\",\n              \"color\": \"#1890ff\"\n            }\n          })]), _cache[3] || (_cache[3] = _createElementVNode(\"p\", {\n            class: \"ant-upload-text\"\n          }, \"点击或拖拽图片到此区域上传\", -1)), _cache[4] || (_cache[4] = _createElementVNode(\"p\", {\n            class: \"ant-upload-hint\"\n          }, \"支持多选，JPG、PNG、BMP、WEBP 格式\", -1))])]),\n          _: 1\n        }, 8, [\"fileList\", \"before-upload\", \"onChange\"]), $data.imageDataList.length > 0 ? (_openBlock(), _createElementBlock(\"div\", _hoisted_4, [_createVNode(_component_a_space, null, {\n          default: _withCtx(() => [_createVNode(_component_a_tag, {\n            color: \"blue\"\n          }, {\n            default: _withCtx(() => [_createTextVNode(\"已选择 \" + _toDisplayString($data.imageDataList.length) + \" 张图片\", 1)]),\n            _: 1\n          }), _createVNode(_component_a_button, {\n            size: \"small\",\n            onClick: $options.clearImages\n          }, {\n            default: _withCtx(() => [...(_cache[5] || (_cache[5] = [_createTextVNode(\"清空\", -1)]))]),\n            _: 1\n          }, 8, [\"onClick\"])]),\n          _: 1\n        })])) : _createCommentVNode(\"\", true), _createElementVNode(\"div\", _hoisted_5, [_createVNode(_component_a_button, {\n          type: \"primary\",\n          size: \"large\",\n          loading: $data.predicting,\n          disabled: $data.imageDataList.length === 0 || !$data.selectedModel,\n          onClick: $options.batchPredict\n        }, {\n          icon: _withCtx(() => [_createVNode(_component_thunderbolt_outlined)]),\n          default: _withCtx(() => [_createTextVNode(\" 批量识别 (\" + _toDisplayString($data.imageDataList.length) + \") \", 1)]),\n          _: 1\n        }, 8, [\"loading\", \"disabled\", \"onClick\"])])]),\n        _: 1\n      })]),\n      _: 1\n    }), _createVNode(_component_a_col, {\n      xs: 24,\n      lg: 16\n    }, {\n      default: _withCtx(() => [_createVNode(_component_a_card, {\n        title: \"识别结果\"\n      }, _createSlots({\n        default: _withCtx(() => [$data.results.length === 0 && !$data.predicting ? (_openBlock(), _createElementBlock(\"div\", _hoisted_6, [_createVNode(_component_folder_open_outlined, {\n          style: {\n            \"font-size\": \"64px\",\n            \"margin-bottom\": \"16px\"\n          }\n        }), _cache[8] || (_cache[8] = _createElementVNode(\"p\", null, \"请上传图片并选择模型进行批量识别\", -1))])) : _createCommentVNode(\"\", true), _createVNode(_component_a_spin, {\n          spinning: $data.predicting,\n          style: {\n            \"width\": \"100%\"\n          }\n        }, {\n          default: _withCtx(() => [$data.predicting ? (_openBlock(), _createElementBlock(\"div\", _hoisted_7, [_createElementVNode(\"p\", null, \"正在处理 \" + _toDisplayString($data.imageDataList.length) + \" 张图片...\", 1), _createVNode(_component_a_progress, {\n            percent: Math.round($data.processedCount / $data.imageDataList.length * 100)\n          }, null, 8, [\"percent\"])])) : _createCommentVNode(\"\", true), $data.results.length > 0 ? (_openBlock(), _createElementBlock(\"div\", _hoisted_8, [_createVNode(_component_a_row, {\n            gutter: [16, 16]\n          }, {\n            default: _withCtx(() => [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.results, (result, index) => {\n              return _openBlock(), _createBlock(_component_a_col, {\n                xs: 24,\n                sm: 12,\n                lg: 8,\n                key: index\n              }, {\n                default: _withCtx(() => [_createVNode(_component_a_card, {\n                  size: \"small\",\n                  hoverable: \"\"\n                }, {\n                  cover: _withCtx(() => [_createElementVNode(\"div\", _hoisted_9, [_createElementVNode(\"img\", {\n                    src: $data.imageDataList[result.index],\n                    style: {\n                      \"max-width\": \"100%\",\n                      \"max-height\": \"100%\",\n                      \"object-fit\": \"contain\"\n                    }\n                  }, null, 8, _hoisted_10)])]),\n                  default: _withCtx(() => [result.success ? (_openBlock(), _createElementBlock(\"div\", _hoisted_11, [_createVNode(_component_a_space, {\n                    direction: \"vertical\",\n                    style: {\n                      \"width\": \"100%\"\n                    }\n                  }, {\n                    default: _withCtx(() => [_createVNode(_component_a_tag, {\n                      color: result.prediction.confidence > 0.8 ? 'green' : result.prediction.confidence > 0.6 ? 'orange' : 'blue'\n                    }, {\n                      default: _withCtx(() => [_createTextVNode(_toDisplayString(result.prediction.class), 1)]),\n                      _: 2\n                    }, 1032, [\"color\"]), _createVNode(_component_a_progress, {\n                      percent: result.prediction.confidence * 100,\n                      size: \"small\",\n                      \"stroke-color\": result.prediction.confidence > 0.8 ? '#52c41a' : result.prediction.confidence > 0.6 ? '#faad14' : '#1890ff'\n                    }, null, 8, [\"percent\", \"stroke-color\"]), _createElementVNode(\"small\", _hoisted_12, \" 置信度: \" + _toDisplayString((result.prediction.confidence * 100).toFixed(1)) + \"% \", 1)]),\n                    _: 2\n                  }, 1024)])) : (_openBlock(), _createElementBlock(\"div\", _hoisted_13, [_createVNode(_component_a_alert, {\n                    type: \"error\",\n                    message: result.error,\n                    size: \"small\"\n                  }, null, 8, [\"message\"])]))]),\n                  _: 2\n                }, 1024)]),\n                _: 2\n              }, 1024);\n            }), 128))]),\n            _: 1\n          }), _createVNode(_component_a_divider), _createVNode(_component_a_row, {\n            gutter: 32\n          }, {\n            default: _withCtx(() => [_createVNode(_component_a_col, {\n              xs: 24,\n              md: 6\n            }, {\n              default: _withCtx(() => [_createVNode(_component_a_statistic, {\n                title: \"总计\",\n                value: $data.results.length,\n                suffix: \"张\"\n              }, null, 8, [\"value\"])]),\n              _: 1\n            }), _createVNode(_component_a_col, {\n              xs: 24,\n              md: 6\n            }, {\n              default: _withCtx(() => [_createVNode(_component_a_statistic, {\n                title: \"成功\",\n                value: $options.successCount,\n                suffix: \"张\"\n              }, null, 8, [\"value\"])]),\n              _: 1\n            }), _createVNode(_component_a_col, {\n              xs: 24,\n              md: 6\n            }, {\n              default: _withCtx(() => [_createVNode(_component_a_statistic, {\n                title: \"失败\",\n                value: $options.failCount,\n                suffix: \"张\"\n              }, null, 8, [\"value\"])]),\n              _: 1\n            }), _createVNode(_component_a_col, {\n              xs: 24,\n              md: 6\n            }, {\n              default: _withCtx(() => [_createVNode(_component_a_statistic, {\n                title: \"成功率\",\n                value: $options.successRate,\n                suffix: \"%\"\n              }, null, 8, [\"value\"])]),\n              _: 1\n            })]),\n            _: 1\n          })])) : _createCommentVNode(\"\", true)]),\n          _: 1\n        }, 8, [\"spinning\"])]),\n        _: 2\n      }, [$data.results.length > 0 ? {\n        name: \"extra\",\n        fn: _withCtx(() => [_createVNode(_component_a_space, null, {\n          default: _withCtx(() => [_createVNode(_component_a_button, {\n            size: \"small\",\n            onClick: $options.exportResults\n          }, {\n            icon: _withCtx(() => [_createVNode(_component_download_outlined)]),\n            default: _withCtx(() => [_cache[6] || (_cache[6] = _createTextVNode(\" 导出结果 \", -1))]),\n            _: 1\n          }, 8, [\"onClick\"]), _createVNode(_component_a_button, {\n            size: \"small\",\n            onClick: $options.clearResults\n          }, {\n            default: _withCtx(() => [...(_cache[7] || (_cache[7] = [_createTextVNode(\"清空结果\", -1)]))]),\n            _: 1\n          }, 8, [\"onClick\"])]),\n          _: 1\n        })]),\n        key: \"0\"\n      } : undefined]), 1024)]),\n      _: 1\n    })]),\n    _: 1\n  })]);\n}","map":{"version":3,"names":["style","class","_createElementBlock","_createVNode","_component_a_page_header","title","onBack","_cache","$event","_ctx","$router","go","_component_a_row","gutter","_component_a_col","xs","lg","_component_a_card","_component_a_select","value","$data","selectedModel","placeholder","onChange","$options","onModelChange","_Fragment","_renderList","models","model","_createBlock","_component_a_select_option","key","id","_component_a_space","_component_a_tag","color","type","size","_toDisplayString","name","currentModelInfo","_hoisted_1","description","_component_a_upload_dragger","fileList","beforeUpload","multiple","accept","handleUpload","_createElementVNode","_hoisted_2","_hoisted_3","_component_inbox_outlined","imageDataList","length","_hoisted_4","_component_a_button","onClick","clearImages","_hoisted_5","loading","predicting","disabled","batchPredict","icon","_withCtx","_component_thunderbolt_outlined","_createSlots","results","_hoisted_6","_component_folder_open_outlined","_component_a_spin","spinning","_hoisted_7","_component_a_progress","percent","Math","round","processedCount","_hoisted_8","result","index","sm","hoverable","cover","_hoisted_9","src","success","_hoisted_11","direction","prediction","confidence","_hoisted_12","toFixed","_hoisted_13","_component_a_alert","message","error","_component_a_divider","md","_component_a_statistic","suffix","successCount","failCount","successRate","exportResults","_component_download_outlined","clearResults"],"sources":["C:\\Users\\oscar\\Downloads\\swatchon2\\web_demo\\frontend\\src\\views\\BatchPredict.vue"],"sourcesContent":["<template>\n  <div>\n    <a-page-header\n      title=\"批量识别\"\n      sub-title=\"上传多张面料图片进行批量智能分类识别\"\n      @back=\"$router.go(-1)\"\n    />\n\n    <a-row :gutter=\"32\">\n      <a-col :xs=\"24\" :lg=\"8\">\n        <a-card title=\"选择模型\" style=\"margin-bottom: 24px;\">\n          <a-select\n            v-model:value=\"selectedModel\"\n            placeholder=\"请选择识别模型\"\n            style=\"width: 100%\"\n            @change=\"onModelChange\"\n          >\n            <a-select-option v-for=\"model in models\" :key=\"model.id\" :value=\"model.id\">\n              <a-space>\n                <a-tag :color=\"model.type === 'binary' ? 'blue' : 'green'\" size=\"small\">\n                  {{ model.type === 'binary' ? '二分类' : '多分类' }}\n                </a-tag>\n                {{ model.name }}\n              </a-space>\n            </a-select-option>\n          </a-select>\n          <p v-if=\"currentModelInfo\" style=\"margin-top: 8px; color: #666; font-size: 14px;\">\n            {{ currentModelInfo.description }}\n          </p>\n        </a-card>\n\n        <a-card title=\"上传图片\">\n          <a-upload-dragger\n            v-model:fileList=\"fileList\"\n            :before-upload=\"beforeUpload\"\n            multiple\n            accept=\"image/*\"\n            @change=\"handleUpload\"\n          >\n            <div style=\"padding: 40px;\">\n              <p class=\"ant-upload-drag-icon\">\n                <inbox-outlined style=\"font-size: 48px; color: #1890ff;\" />\n              </p>\n              <p class=\"ant-upload-text\">点击或拖拽图片到此区域上传</p>\n              <p class=\"ant-upload-hint\">支持多选，JPG、PNG、BMP、WEBP 格式</p>\n            </div>\n          </a-upload-dragger>\n\n          <div v-if=\"imageDataList.length > 0\" style=\"margin-top: 16px;\">\n            <a-space>\n              <a-tag color=\"blue\">已选择 {{ imageDataList.length }} 张图片</a-tag>\n              <a-button size=\"small\" @click=\"clearImages\">清空</a-button>\n            </a-space>\n          </div>\n\n          <div style=\"margin-top: 16px; text-align: center;\">\n            <a-button\n              type=\"primary\"\n              size=\"large\"\n              :loading=\"predicting\"\n              :disabled=\"imageDataList.length === 0 || !selectedModel\"\n              @click=\"batchPredict\"\n            >\n              <template #icon>\n                <thunderbolt-outlined />\n              </template>\n              批量识别 ({{ imageDataList.length }})\n            </a-button>\n          </div>\n        </a-card>\n      </a-col>\n\n      <a-col :xs=\"24\" :lg=\"16\">\n        <a-card title=\"识别结果\">\n          <template #extra v-if=\"results.length > 0\">\n            <a-space>\n              <a-button size=\"small\" @click=\"exportResults\">\n                <template #icon>\n                  <download-outlined />\n                </template>\n                导出结果\n              </a-button>\n              <a-button size=\"small\" @click=\"clearResults\">清空结果</a-button>\n            </a-space>\n          </template>\n\n          <div v-if=\"results.length === 0 && !predicting\" style=\"text-align: center; padding: 60px 20px; color: #999;\">\n            <folder-open-outlined style=\"font-size: 64px; margin-bottom: 16px;\" />\n            <p>请上传图片并选择模型进行批量识别</p>\n          </div>\n\n          <a-spin :spinning=\"predicting\" style=\"width: 100%;\">\n            <div v-if=\"predicting\" style=\"text-align: center; padding: 40px;\">\n              <p>正在处理 {{ imageDataList.length }} 张图片...</p>\n              <a-progress :percent=\"Math.round((processedCount / imageDataList.length) * 100)\" />\n            </div>\n\n            <div v-if=\"results.length > 0\">\n              <a-row :gutter=\"[16, 16]\">\n                <a-col :xs=\"24\" :sm=\"12\" :lg=\"8\" v-for=\"(result, index) in results\" :key=\"index\">\n                  <a-card size=\"small\" hoverable>\n                    <template #cover>\n                      <div style=\"height: 200px; overflow: hidden; display: flex; align-items: center; justify-content: center; background: #f5f5f5;\">\n                        <img\n                          :src=\"imageDataList[result.index]\"\n                          style=\"max-width: 100%; max-height: 100%; object-fit: contain;\"\n                        />\n                      </div>\n                    </template>\n                    \n                    <div v-if=\"result.success\">\n                      <a-space direction=\"vertical\" style=\"width: 100%;\">\n                        <a-tag :color=\"result.prediction.confidence > 0.8 ? 'green' : result.prediction.confidence > 0.6 ? 'orange' : 'blue'\">\n                          {{ result.prediction.class }}\n                        </a-tag>\n                        <a-progress\n                          :percent=\"result.prediction.confidence * 100\"\n                          size=\"small\"\n                          :stroke-color=\"result.prediction.confidence > 0.8 ? '#52c41a' : result.prediction.confidence > 0.6 ? '#faad14' : '#1890ff'\"\n                        />\n                        <small style=\"color: #666;\">\n                          置信度: {{ (result.prediction.confidence * 100).toFixed(1) }}%\n                        </small>\n                      </a-space>\n                    </div>\n                    \n                    <div v-else>\n                      <a-alert type=\"error\" :message=\"result.error\" size=\"small\" />\n                    </div>\n                  </a-card>\n                </a-col>\n              </a-row>\n\n              <a-divider />\n              \n              <a-row :gutter=\"32\">\n                <a-col :xs=\"24\" :md=\"6\">\n                  <a-statistic title=\"总计\" :value=\"results.length\" suffix=\"张\" />\n                </a-col>\n                <a-col :xs=\"24\" :md=\"6\">\n                  <a-statistic title=\"成功\" :value=\"successCount\" suffix=\"张\" />\n                </a-col>\n                <a-col :xs=\"24\" :md=\"6\">\n                  <a-statistic title=\"失败\" :value=\"failCount\" suffix=\"张\" />\n                </a-col>\n                <a-col :xs=\"24\" :md=\"6\">\n                  <a-statistic title=\"成功率\" :value=\"successRate\" suffix=\"%\" />\n                </a-col>\n              </a-row>\n            </div>\n          </a-spin>\n        </a-card>\n      </a-col>\n    </a-row>\n  </div>\n</template>\n\n<script>\nimport { InboxOutlined, ThunderboltOutlined, FolderOpenOutlined, DownloadOutlined } from '@ant-design/icons-vue'\nimport axios from 'axios'\n\nexport default {\n  name: 'BatchPredict',\n  components: {\n    InboxOutlined,\n    ThunderboltOutlined,\n    FolderOpenOutlined,\n    DownloadOutlined\n  },\n  data() {\n    return {\n      models: [],\n      selectedModel: null,\n      fileList: [],\n      imageDataList: [],\n      predicting: false,\n      results: [],\n      processedCount: 0\n    }\n  },\n  computed: {\n    currentModelInfo() {\n      return this.models.find(m => m.id === this.selectedModel)\n    },\n    successCount() {\n      return this.results.filter(r => r.success).length\n    },\n    failCount() {\n      return this.results.filter(r => !r.success).length\n    },\n    successRate() {\n      return this.results.length > 0 ? Math.round((this.successCount / this.results.length) * 100) : 0\n    }\n  },\n  mounted() {\n    this.loadModels()\n    if (this.$route.query.model) {\n      this.selectedModel = this.$route.query.model\n    }\n  },\n  methods: {\n    async loadModels() {\n      try {\n        const response = await axios.get('/api/models')\n        this.models = response.data.models\n        \n        if (!this.selectedModel && this.models.length > 0) {\n          this.selectedModel = this.models[0].id\n        }\n      } catch (error) {\n        this.$message.error('加载模型失败: ' + error.message)\n      }\n    },\n    \n    onModelChange() {\n      this.results = []\n    },\n    \n    beforeUpload(file) {\n      const isImage = file.type.startsWith('image/')\n      if (!isImage) {\n        this.$message.error('只能上传图片文件!')\n        return false\n      }\n      \n      const isLt10M = file.size / 1024 / 1024 < 10\n      if (!isLt10M) {\n        this.$message.error('图片大小不能超过 10MB!')\n        return false\n      }\n      \n      return false\n    },\n    \n    handleUpload(info) {\n      const files = info.fileList.map(f => f.originFileObj || f)\n      this.processFiles(files)\n    },\n    \n    processFiles(files) {\n      this.imageDataList = []\n      const promises = files.map(file => {\n        return new Promise((resolve) => {\n          const reader = new FileReader()\n          reader.onload = (e) => resolve(e.target.result)\n          reader.readAsDataURL(file)\n        })\n      })\n      \n      Promise.all(promises).then(results => {\n        this.imageDataList = results\n        this.results = []\n      })\n    },\n    \n    clearImages() {\n      this.fileList = []\n      this.imageDataList = []\n      this.results = []\n    },\n    \n    clearResults() {\n      this.results = []\n    },\n    \n    async batchPredict() {\n      if (this.imageDataList.length === 0 || !this.selectedModel) {\n        this.$message.warning('请上传图片并选择模型')\n        return\n      }\n      \n      this.predicting = true\n      this.processedCount = 0\n      \n      try {\n        const response = await axios.post('/api/batch_predict', {\n          model_id: this.selectedModel,\n          images: this.imageDataList\n        })\n        \n        this.results = response.data.results\n        this.processedCount = this.imageDataList.length\n        \n        this.$message.success(`批量识别完成! 成功: ${this.successCount}, 失败: ${this.failCount}`)\n      } catch (error) {\n        this.$message.error('批量识别失败: ' + (error.response?.data?.error || error.message))\n      } finally {\n        this.predicting = false\n      }\n    },\n    \n    exportResults() {\n      if (this.results.length === 0) return\n      \n      const csvContent = [\n        ['序号', '预测类别', '置信度', '状态'],\n        ...this.results.map((result, index) => [\n          index + 1,\n          result.success ? result.prediction.class : '识别失败',\n          result.success ? (result.prediction.confidence * 100).toFixed(2) + '%' : '-',\n          result.success ? '成功' : result.error\n        ])\n      ].map(row => row.join(',')).join('\\n')\n      \n      const blob = new Blob(['\\ufeff' + csvContent], { type: 'text/csv;charset=utf-8;' })\n      const link = document.createElement('a')\n      link.href = URL.createObjectURL(blob)\n      link.download = `批量识别结果_${new Date().toISOString().slice(0, 19).replace(/:/g, '-')}.csv`\n      link.click()\n    }\n  }\n}\n</script>\n\n<style scoped>\n.ant-upload-dragger {\n  background: #fafafa !important;\n}\n\n.ant-upload-dragger:hover {\n  border-color: #1890ff !important;\n}\n</style>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}